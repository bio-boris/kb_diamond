{
  "ver": "0.0.1",
  "authors": [
    "bsadkhin"
  ],
  "contact": "",
  "categories": [
    "active",
    "sequence"
  ],
  "widgets" : {
    "input" : "kbaseNarrativeMethodInput",
    "output" : "no-display"
  },
  "parameters": [
    {
      "id": "input_query_string",
      "optional": true,
      "advanced": false,
      "allow_multiple": false,
      "default_values": [
        ""
      ],
      "field_type": "textarea",
      "textarea_options": {
        "n_rows": 10
      }
    },
    {
      "id": "input_object_ref",
      "optional": true,
      "advanced": false,
      "allow_multiple": false,
      "default_values": [
        ""
      ],
      "field_type": "text",
      "text_options": {
        "valid_ws_types": [
          "KBaseSequences.SequenceSet",
          "KBaseGenomes.Feature"
        ]
      }
    },
    {
      "id": "output_sequence_set_name",
      "optional": true,
      "advanced": false,
      "allow_multiple": false,
      "default_values": [
        ""
      ],
      "field_type": "text",
      "text_options": {
        "valid_ws_types": [
          "KBaseSequences.SequenceSet"
        ],
        "is_output_name": true
      }
    },
    {
      "id": "target_object_ref",
      "optional": false,
      "advanced": false,
      "allow_multiple": false,
      "default_values": [
        ""
      ],
      "field_type": "text",
      "text_options": {
        "valid_ws_types": [
          "KBaseCollections.FeatureSet",
          "KBaseGenomes.Genome",
          "KBaseSearch.GenomeSet"
        ]
      }
    },
    {
      "id": "evalue",
      "optional": false,
      "advanced": false,
      "allow_multiple": false,
      "default_values": [
        ".001"
      ],
      "field_type": "text",
      "text_options": {
        "validate_as": "float",
        "min_integer": 0
      }
    },
    {
      "id": "min-score",
      "optional": true,
      "advanced": true,
      "allow_multiple": false,
      "field_type": "text",
      "text_options": {
        "validate_as": "int",
        "min_integer": 0
      }
    },
    {
      "id": "id",
      "optional": false,
      "advanced": false,
      "allow_multiple": false,
      "default_values": [
        "97.0"
      ],
      "field_type": "text",
      "text_options": {
        "validate_as": "float",
        "min_float": 0.0,
        "max_float": 100.0
      }
    }

  ],
  "behavior": {
    "service-mapping": {
      "url": "",
      "name": "kb_diamond",
      "method": "Diamond_Blast_Search",
      "input_mapping": [
        {
          "narrative_system_variable": "workspace",
          "target_property": "workspace_name"
        },
        {
          "input_parameter": "input_query_string",
          "target_property": "input_query_string"
        },
        {
          "input_parameter": "input_object_ref",
          "target_property": "input_object_ref",
          "target_type_transform": "resolved-ref"
        },
        {
          "input_parameter": "output_sequence_set_name",
          "target_property": "output_sequence_set_name"
        },
        {
          "input_parameter": "target_object_ref",
          "target_property": "target_object_ref",
          "target_type_transform": "resolved-ref"
        },
        {
          "input_parameter": "evalue",
          "target_property": "evalue"
        },
        {
          "input_parameter": "min-score",
          "target_property": "min-score"
        },
        {
          "input_parameter": "id",
          "target_property": "id"
        }
      ],
      "output_mapping": [
        {
          "narrative_system_variable": "workspace",
          "target_property": "wsName"
        },
        {
          "service_method_output_path": [0,"report_name"],
          "target_property": "report_name"
        },
        {
          "service_method_output_path": [0,"report_ref"],
          "target_property": "report_ref"
        },
        {
          "constant_value": "16",
          "target_property": "report_window_line_height"
        }

      ]
    }
  },
  "job_id_output_field": "docker"
}
